// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoInter.Data;

#nullable disable

namespace ProjetoInter.Migrations
{
    [DbContext(typeof(DbZoologico))]
    [Migration("20250615194412_RemovendoTrocarSenhaUsuario")]
    partial class RemovendoTrocarSenhaUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjetoInter.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("animalid");

                    b.Property<DateTime?>("DataFalecimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("datafalecimento");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("datanascimento");

                    b.Property<int>("EspecieId")
                        .HasColumnType("int")
                        .HasColumnName("especie");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("longtext")
                        .HasColumnName("imagemurl");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("peso");

                    b.Property<int>("SetorId")
                        .HasColumnType("int")
                        .HasColumnName("setor");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("sexo");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("AnimalId");

                    b.HasIndex("EspecieId");

                    b.HasIndex("SetorId");

                    b.HasIndex("StatusId");

                    b.ToTable("animal");
                });

            modelBuilder.Entity("ProjetoInter.Models.AnimalEspecie", b =>
                {
                    b.Property<int>("AnimalEspecieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("animalespecieid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.HasKey("AnimalEspecieId");

                    b.ToTable("animalespecie");
                });

            modelBuilder.Entity("ProjetoInter.Models.AnimalStatus", b =>
                {
                    b.Property<int>("AnimalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("animalstatusid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.HasKey("AnimalStatusId");

                    b.ToTable("animalstatus");
                });

            modelBuilder.Entity("ProjetoInter.Models.AtendimentoVeterinario", b =>
                {
                    b.Property<int>("AtendimentoVeterinarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("atendimentoveterinarioid");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int")
                        .HasColumnName("animal");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<int>("FuncionarioSolicitanteId")
                        .HasColumnType("int")
                        .HasColumnName("funcionariosolicitante");

                    b.Property<int>("FuncionarioVeterinarioId")
                        .HasColumnType("int")
                        .HasColumnName("funcionarioveterinario");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext")
                        .HasColumnName("observacoes");

                    b.Property<string>("Resultado")
                        .HasColumnType("longtext")
                        .HasColumnName("resultado");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.HasKey("AtendimentoVeterinarioId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("FuncionarioSolicitanteId");

                    b.HasIndex("FuncionarioVeterinarioId");

                    b.ToTable("atendimentoveterinario");
                });

            modelBuilder.Entity("ProjetoInter.Models.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("funcionarioid");

                    b.Property<Guid?>("AuthUserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("auth_user_id");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cargo");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cpf");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("longtext")
                        .HasColumnName("imagemurl");

                    b.Property<int>("InstituicaoId")
                        .HasColumnType("int")
                        .HasColumnName("instituicaoid");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isadmin");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<int>("StatusFuncionarioId")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext")
                        .HasColumnName("telefone");

                    b.HasKey("FuncionarioId");

                    b.HasIndex("InstituicaoId");

                    b.HasIndex("StatusFuncionarioId");

                    b.ToTable("funcionario");
                });

            modelBuilder.Entity("ProjetoInter.Models.Instituicao", b =>
                {
                    b.Property<int>("InstituicaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("instituicaoid");

                    b.Property<string>("Contato")
                        .HasColumnType("longtext")
                        .HasColumnName("contato");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("endereco");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("longtext")
                        .HasColumnName("imagemurl");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.HasKey("InstituicaoId");

                    b.ToTable("instituicao");
                });

            modelBuilder.Entity("ProjetoInter.Models.Procedimento", b =>
                {
                    b.Property<int>("ProcedimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("procedimentoid");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int")
                        .HasColumnName("animal");

                    b.Property<DateOnly>("DataProcedimento")
                        .HasColumnType("date")
                        .HasColumnName("dataprocedimento");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<int>("FuncionarioTarefaId")
                        .HasColumnType("int")
                        .HasColumnName("funcionariotarefa");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext")
                        .HasColumnName("observacoes");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.HasKey("ProcedimentoId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("FuncionarioTarefaId");

                    b.ToTable("procedimento");
                });

            modelBuilder.Entity("ProjetoInter.Models.Setor", b =>
                {
                    b.Property<int>("SetorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("setorid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<int>("InstituicaoPertenceId")
                        .HasColumnType("int")
                        .HasColumnName("instituicaopertence");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.HasKey("SetorId");

                    b.HasIndex("InstituicaoPertenceId");

                    b.ToTable("setor");
                });

            modelBuilder.Entity("ProjetoInter.Models.StatusFuncionario", b =>
                {
                    b.Property<int>("StatusFuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("statusfuncionarioid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.HasKey("StatusFuncionarioId");

                    b.ToTable("statusfuncionario");
                });

            modelBuilder.Entity("ProjetoInter.Models.Transferencia", b =>
                {
                    b.Property<int>("TransferenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transferenciaid");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int")
                        .HasColumnName("animal");

                    b.Property<DateTime?>("DataEntrada")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dataentrada");

                    b.Property<DateTime?>("DataSaida")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("datasaida");

                    b.Property<int>("InstituicaoDestinoId")
                        .HasColumnType("int")
                        .HasColumnName("instituicaodestino");

                    b.Property<int>("InstituicaoOrigemId")
                        .HasColumnType("int")
                        .HasColumnName("instituicaoorigem");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.HasKey("TransferenciaId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("InstituicaoDestinoId");

                    b.HasIndex("InstituicaoOrigemId");

                    b.ToTable("transferencia");
                });

            modelBuilder.Entity("ProjetoInter.Models.Animal", b =>
                {
                    b.HasOne("ProjetoInter.Models.AnimalEspecie", "Especie")
                        .WithMany()
                        .HasForeignKey("EspecieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoInter.Models.Setor", "Setor")
                        .WithMany()
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoInter.Models.AnimalStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");

                    b.Navigation("Setor");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ProjetoInter.Models.AtendimentoVeterinario", b =>
                {
                    b.HasOne("ProjetoInter.Models.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoInter.Models.Funcionario", "FuncionarioSolicitante")
                        .WithMany()
                        .HasForeignKey("FuncionarioSolicitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoInter.Models.Funcionario", "FuncionarioVeterinario")
                        .WithMany()
                        .HasForeignKey("FuncionarioVeterinarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("FuncionarioSolicitante");

                    b.Navigation("FuncionarioVeterinario");
                });

            modelBuilder.Entity("ProjetoInter.Models.Funcionario", b =>
                {
                    b.HasOne("ProjetoInter.Models.Instituicao", "Instituicao")
                        .WithMany()
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoInter.Models.StatusFuncionario", "StatusFuncionario")
                        .WithMany()
                        .HasForeignKey("StatusFuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituicao");

                    b.Navigation("StatusFuncionario");
                });

            modelBuilder.Entity("ProjetoInter.Models.Procedimento", b =>
                {
                    b.HasOne("ProjetoInter.Models.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoInter.Models.Funcionario", "FuncionarioTarefa")
                        .WithMany()
                        .HasForeignKey("FuncionarioTarefaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("FuncionarioTarefa");
                });

            modelBuilder.Entity("ProjetoInter.Models.Setor", b =>
                {
                    b.HasOne("ProjetoInter.Models.Instituicao", "InstituicaoPertence")
                        .WithMany()
                        .HasForeignKey("InstituicaoPertenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstituicaoPertence");
                });

            modelBuilder.Entity("ProjetoInter.Models.Transferencia", b =>
                {
                    b.HasOne("ProjetoInter.Models.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoInter.Models.Instituicao", "InstituicaoDestino")
                        .WithMany()
                        .HasForeignKey("InstituicaoDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoInter.Models.Instituicao", "InstituicaoOrigem")
                        .WithMany()
                        .HasForeignKey("InstituicaoOrigemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("InstituicaoDestino");

                    b.Navigation("InstituicaoOrigem");
                });
#pragma warning restore 612, 618
        }
    }
}
