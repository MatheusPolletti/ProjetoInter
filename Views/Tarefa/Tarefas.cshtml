@model IEnumerable<ProjetoInter.Models.Procedimento>


@{
    ViewData["Title"] = "Minhas Tarefas";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    // Separar tarefas pendentes e concluídas
    var tarefasPendentes = Model.Where(t => !t.Status).ToList();
    var tarefasConcluidas = Model.Where(t => t.Status).ToList();
    
    // Obter animais do ViewData
    var animais = ViewData["Animais"] as List<ProjetoInter.Models.Animal>;
}

@Html.AntiForgeryToken()

@section Styles
{
    <link rel="stylesheet" href="/css/TelaTarefa.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
}

@section Scripts
{
    <script src="~/js/Modais/CarrosselTarefa.js"></script>
    <script src="~/js/Modais/Tarefas.js"></script>
}

@section HeaderBarras
{
    <div class="Header">
        <div class="ConteudoHeader">
            <h1 class="NomePagina">Tarefas</h1>
            
            <div class="Barrabusca">
                <input type="text" placeholder="Pesquisar..." class="TextoPesquisa">
                <button class="BotaoIconePesquisa" aria-label="Pesquisar">
                    <i class="fas fa-search" aria-hidden="true"></i>
                </button>    
            </div>
            
            <div class="BotoesAcoes">
                <button class="BotaoExcluir" onclick="excluirTarefasSelecionadas()">Excluir</button>
                <button id="btn-editar-tarefa" class="BotaoEditar">Editar</button>
                <button id="btn-nova-tarefa" class="BotaoNovo">Novo</button>
            </div>
        </div>
    </div>
}

@await Html.PartialAsync("_ModalNovaTarefa", animais)

<!-- Conteúdo Principal -->
<div class="container-tarefas">
    <div class="topo">
        <h2>Pendentes</h2>
        <div class="container-botoes">
            <div class="botoes-carrossel">
                <i class="fa-solid fa-chevron-left" id="btn-carrossel-esquerda" onclick="moveEsquerda()"></i>
                <i class="fa-solid fa-chevron-right" id="btn-carrossel-direita" onclick="moveDireita()"></i>
            </div>
        </div>
        <div class="container-carrossel">
            <div class="carrossel-cards-verticais">
                @if (tarefasPendentes != null && tarefasPendentes.Count > 0)
                {
                    foreach (var tarefa in tarefasPendentes)
                    {
                        <div>
                            <div class="card-vertical">
                                <input type="checkbox" class="selecionar-tarefa" data-id="@tarefa.ProcedimentoId" onclick="event.stopPropagation();" />
                                <div class="topo-card">
                                    <div class="topo-esquerda">
                                        <h4>@tarefa.Descricao</h4>
                                        @if (tarefa.Animal != null)
                                        {
                                            <p><small>@tarefa.Animal.Nome | @tarefa.Animal.Especie?.Descricao</small></p>
                                        }
                                        else
                                        {
                                            <p><small>Animal não especificado</small></p>
                                        }
                                    </div>
                                    <small>Data: @tarefa.DataProcedimento.ToString("dd/MM/yyyy")</small>
                                </div>
                                <div class="descricao">
                                    @if (!string.IsNullOrEmpty(tarefa.Observacoes))
                                    {
                                        <small><strong>Observações:</strong> @tarefa.Observacoes</small>
                                    }
                                    <small><strong>Responsável:</strong> @(tarefa.FuncionarioTarefa?.Nome ?? "Não atribuído")</small>
                                </div>
                                <button class="btn-concluir" data-tarefa-id="@tarefa.ProcedimentoId">Concluir</button>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="card-vazio">
                        <p>Nenhuma tarefa pendente</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="inferior">
    <h2>Concluídas</h2>
    <div class="cards-horizontais">
        @if (tarefasConcluidas != null && tarefasConcluidas.Count > 0)
        {
            foreach (var tarefa in tarefasConcluidas)
            {
                <div class="card-link">
                    <div class="card-horizontal">
                        <div>
                            <h4>@tarefa.Descricao</h4>
                            @if (!string.IsNullOrEmpty(tarefa.Observacoes))
                            {
                                <small><strong>Observações:</strong> @tarefa.Observacoes</small>
                            }
                        </div>
                        <div>
                            <small><strong>Concluído por:</strong> @(tarefa.FuncionarioTarefa?.Nome ?? "Não atribuído")</small>
                            <small><strong>Concluído em:</strong> @DateTime.Now.ToString("dd/MM/yyyy")</small>
                        </div>
                        <div>
                            <small>Data: @tarefa.DataProcedimento.ToString("dd/MM/yyyy")</small>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="card-horizontal">
                <div class="mensagem-vazia">
                    Nenhuma tarefa concluída
                </div>
            </div>
        }
    </div>
</div>
